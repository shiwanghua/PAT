问了协程等一些面经。

最近第三次遇到这题了

```
// // 给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。
// // 示例 3:
// // 输入: s = "pwwkew"
// // 输出: 3
// // 解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
// //      请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
// // 0 <= s.length <= 5 * 1e4
// // s 由英文字母、数字、符号和空格组成

// #include <iostream>
// #include <vector>
// #include <cstring>
// using namespace std;

// int main()
// {
//     string s;
//     // s="abababcab";
//     // s="wwwqqqwww";
//     s = "yhnnyhjjyhio";
//     s = "wjshdnnrjuvhdbenmskxa";
//     int pos[128], maxLen = 0, begin = 0;
//     memset(pos, -1, sizeof(int) * 128);
//     for (int i = 0; i < s.length(); i++)
//     {
//         if (pos[s[i]] < begin)
//         {
//             maxLen = max(maxLen, i - begin + 1);
//         }
//         else
//         {
//             begin = pos[s[i]] + 1;
//         }
//         pos[s[i]] = i;
//     }
//     cout << maxLen;
//     return 0;
// }


// // 找两个有序数组的中位数，讲思路
```

最后设计些测试方法

杭州都是996

一周可以迟到三次